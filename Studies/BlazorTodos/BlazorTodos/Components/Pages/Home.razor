@page "/"
@using System.Collections
@using BlazorTodos.Models
@using BlazorTodos.Components.Modals
@rendermode InteractiveServer
@inject ITodoService TodoService
@inject IDialogService DialoService;




<MudThemeProvider/>
<MudPopoverProvider />
<MudDialogProvider />
<PageTitle>Home</PageTitle>
<br />
<br />
<MudPaper>
    <MudTooltip Text="Adicionar Tarefa">
        <MudIconButton Icon="@Icons.Material.Filled.Add" Color="@Color.Inherit" OnClick="OpenNewTodo"></MudIconButton>
    </MudTooltip>
    <MudTooltip Text="Atualizar Lista">
        <MudIconButton Icon="@Icons.Material.Filled.Refresh" Color="@Color.Inherit" OnClick="LoadData"></MudIconButton>
    </MudTooltip>
</MudPaper>
<br />
<br />
@if (_error)
{
    <MudAlert Severity="Severity.Warning">@_ErrorMessage</MudAlert>
}
else
{
        <MudGrid>
            @if (Todos != null)
            {
                    @foreach (var t in Todos)
                    {

                        <MudItem xs="4" sm="4" Style=" overflow-y: auto;">
                            <CardComponent ThisTodo="t" OnTodoDeleted="LoadData" />
                        </MudItem>
                    }

            }
            else
            {
                _error = true;
            }
        </MudGrid>
}

@code{
    private IEnumerable<Todo> Todos;
    private string _ErrorMessage;
    private bool _error;
    private int index = 0;
    DialogOptions options = new DialogOptions { CloseOnEscapeKey = true };

    private async Task LoadData()
    {
        try
        {
            Todos = new List<Todo>();
            Todos = await TodoService.GetAllTodos();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            _error = true;

        }
    }

    protected async override Task OnInitializedAsync()
    {
        await LoadData();
    }


    async Task OpenNewTodo()
    {
       var modal = await DialoService.ShowAsync<CreateNewTask>("Nova Tarefa"); 
    }

}
