@page "/add-new"
@using BlazorTodos.Models

@rendermode InteractiveServer

@inject ITodoService TodoService
@inject NavigationManager navigation

<MudPopoverProvider />

<MudText Typo="@Typo.h4" Color="@Color.Inherit" Align="@Align.Center"><MudIcon Icon="@Icons.Material.Filled.AddBox" />Adicionar nova Tarefa</MudText>
<br />
<br />
<br />
<MudGrid>
    <MudItem xs="12" sm="7">
        <MudForm Model="newTodo">
            <MudPaper class="pa-4" Elevation="5" Outlined="true">
                <MudTextField @bind-Value="newTodo.Title" Label="Título" RequiredError="É necessário ao menos o título"></MudTextField>
                <MudTextField @bind-Value="newTodo.Description" Lines="4" IconSize="Size.Small" InputMode="InputMode.text" Label="Descrição"  RequiredError="É necessário ao menos o título"></MudTextField>
                @if (_HasEndline)
                {
                    <MudDatePicker Label="Deadline" @bind-Date="_date" />

                }
                <MudCheckBox @bind-Value="isDone">Concluída</MudCheckBox><MudCheckBox @bind-Value="@_HasEndline">Add Deadline</MudCheckBox>
            </MudPaper>
            <MudButton Color="@Color.Success" OnClick="AddTodo" Variant="Variant.Filled">Enviar</MudButton>
        </MudForm>
    </MudItem>
    <MudItem xs="5" sm="5">
        <MudPaper Elevation="5">
            @if (_error)
            {
                <MudText Typo="@Typo.body1" Color="@Color.Warning">@_errorMessage</MudText>
            }
            else
            {
                <MudText Typo="@Typo.body1" Color="@Color.Success">@_errorMessage</MudText>

            }
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    private bool _HasEndline;
    private bool isDone = false;
    Guid guid;
    private Todo newTodo = new Todo();
    private string tTitle, tDescription, tId;
    private DateTime? _date = DateTime.Today;

    private bool _error = false;
    private string _errorMessage;

    private void AddTodo()
    {
        guid = Guid.NewGuid();
        newTodo.Id = guid.ToString();
        if (_HasEndline)
        {
            newTodo.EndLine = (DateTime)_date.Value.ToUniversalTime();
            newTodo.EndLine.ToUniversalTime();
        }
        else
        {
            newTodo.EndLine = DateTime.Today.ToUniversalTime();
        }

        newTodo.CreationDate = DateTime.UtcNow;
        try
        {
            newTodo.IsDone = isDone;
            TodoService.AddNewObject(newTodo);
            _errorMessage = "Objeto Cadastrado com sucesso";
            navigation.NavigateTo("/");
        }
        catch(Exception ex)
        {
            _errorMessage = ex.InnerException.Message;
            _error = true;
        }
        StateHasChanged();
    }

}
